var msgType = function(msg){
  if(msg==undefined || null==msg||""==msg){
    return "text";
  }
  if(getRegExp("^img.*$").test(msg)){
    return "img";
  }
  if(getRegExp("^file.*$").test(msg)){
    return "file";
  }
  return "text";
};
var fileSrc = function(msg){
  if(msg==undefined || null==msg||""==msg){
    return "";
  }
  return msg.substring(5,msg.indexOf(")"));
};
var imgSrc = function(msg){
  if(msg==undefined || null==msg||""==msg){
    return "";
  }
  return msg.substring(4,msg.indexOf("]"));
};
var formatNumber = function (n) {
  n = n.toString();
  return n[1] ? n : "0" + n
};
var regYear = getRegExp("(y+)", "i");
var dateFormat = function (timestamp, format) {
  if (!format) {
      format = "yyyy-MM-dd hh:mm:ss"
  }
  if (typeof timestamp === "string") {
    var time = getDate(timestamp);
    if(!time || time.toUTCString() == "Invalid Date"){
      return '';
    }
    timestamp = time.getTime();
  }
  timestamp = parseInt(timestamp);
  
  var realDate = getDate(timestamp);
  
  var date = [
      ["M+", formatNumber(realDate.getMonth() + 1)],
      ["d+", formatNumber(realDate.getDate())],
      ["h+", formatNumber(realDate.getHours())],
      ["m+", formatNumber(realDate.getMinutes())],
      ["s+", formatNumber(realDate.getSeconds())],
      ["q+", Math.floor((realDate.getMonth() + 3) / 3)],
      ["S+", realDate.getMilliseconds()],
  ];
  var reg1 = regYear.exec(format);
  if (reg1) {
      format = format.replace(reg1[1], (realDate.getFullYear() + "").substring(4 - reg1[1].length))
  }
  for (var i = 0; i < date.length; i++) {
      var k = date[i][0];
      var v = date[i][1];
      var reg2 = getRegExp("(" + k + ")").exec(format);
      if (reg2) {
          format = format.replace(reg2[1], reg2[1].length == 1 ? v : ("00" + v).substring(("" + v).length))
      }
  }
  return format
};
var ifShow = function(ifneed,result,show){
  if(!ifneed){
    return true;
  }
  if(show){    
    if(result[""+show[0]]!=null && result[""+show[0]].value == show[1]){
      return true;
    }
  }
  return false;
};
var checked = function(result,id,val){
  if(result[""+id]!=null && result[""+id].value!=""){
    var vals = result[""+id].value+'';
    return vals.split(",").indexOf(val)>-1;
  }
  return false;
};
var val = function(result,id){
  if(result[""+id]!=null && result[""+id].value!=""){
    var vals = result[""+id].value+'';
    return vals.split(',')[0];
  }
  return "";
};
var timeago = function(timestamp){
  console.log(timestamp)
  var reg = getRegExp("-", "g");
  timestamp = timestamp.replace(reg, '/');
  var publishTime = getDate(timestamp).getTime()/1000, 
            date = getDate(timestamp), //获取dateStr的标准格式 console.log(date) 打印结果  Thu Sep 06 2018 18:47:00 GMT+0800 (中国标准时间)
  // 获取date 中的 年 月 日 时 分 秒
            Y = date.getFullYear(),
            M = date.getMonth() + 1,
            D = date.getDate(),
            H = date.getHours(),
            m = date.getMinutes(),
            s = date.getSeconds();
  // 对 月 日 时 分 秒 小于10时, 加0显示 例如: 09-09 09:01
  if (M < 10) {
            M = '0' + M;
        }
  if (D < 10) {
            D = '0' + D;
        }
  if (H < 10) {
            H = '0' + H;
        }
  if (m < 10) {
            m = '0' + m;
        }
  if (s < 10) {
            s = '0' + s;
        }
  var nowTime = getDate().getTime() / 1000, //获取此时此刻日期的秒数
            diffValue = nowTime - publishTime, // 获取此时 秒数 与 要处理的日期秒数 之间的差值
            diff_days = parseInt(diffValue / 86400), // 一天86400秒 获取相差的天数 取整
            diff_hours = parseInt(diffValue / 3600), // 一时3600秒
            diff_minutes = parseInt(diffValue / 60),
            diff_secodes = parseInt(diffValue);
  if (diff_days > 0 && diff_days < 3) { //相差天数 0 < diff_days < 3 时, 直接返出
  return diff_days + "天前";
        } else if (diff_days <= 0 && diff_hours > 0) {
  return diff_hours + "小时前";
        } else if (diff_hours <= 0 && diff_minutes > 0) {
  return diff_minutes + "分钟前";
        } else if (diff_secodes < 60) {
  if (diff_secodes <= 0) {
  return "刚刚";
            } else {
  return diff_secodes + "秒前";
            }
        } else if (diff_days >= 3 && diff_days < 30) {
  return M + '-' + D + ' ' + H + ':' + m;
        } else if (diff_days >= 30) {
  return Y + '-' + M + '-' + D + ' ' + H + ':' + m;
        }
  
}
module.exports = {
  imgSrc:imgSrc,
  fileSrc:fileSrc,
  msgType:msgType,
  dateFormat:dateFormat,
  ifShow:ifShow,
  checked:checked,
  val:val,
  timeago:timeago
};